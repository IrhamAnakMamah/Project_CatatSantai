# Nama workflow yang akan muncul di tab "Actions" GitHub
name: Build and Create GitHub Release

# Pemicu: Workflow ini akan berjalan setiap kali ada 'push' ke branch 'main'
on:
  push:
    branches:
      - main

jobs:
  build:
    # Menggunakan environment Ubuntu terbaru untuk menjalankan proses
    runs-on: ubuntu-latest
    steps:
      # Langkah 1: Mengambil (checkout) kode dari repository Anda
      - name: Checkout repository
        uses: actions/checkout@v4

      # Langkah 2: Menyiapkan environment Java (diperlukan untuk build Android)
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      # Langkah 3: Menyiapkan environment Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Langkah 4: Menginstall semua package yang dibutuhkan dari file pubspec.yaml
      - name: Get Flutter dependencies
        run: flutter pub get

      # Langkah 5: Menjalankan perintah untuk membangun file APK untuk rilis
      - name: Build APK
        run: flutter build apk --release

      # Langkah 6: Membuat Rilis di GitHub dan mengunggah file APK
      - name: Create GitHub Release and Upload APK
        uses: softprops/action-gh-release@v1
        with:
          # Token ini digunakan untuk otorisasi. Anda tidak perlu membuat secret baru untuk ini.
          token: ${{ secrets.GITHUB_TOKEN }}
          # Membuat nama tag secara dinamis agar unik untuk setiap rilis
          tag_name: build-${{ github.run_number }}
          # Memberi nama rilis yang akan tampil di halaman Releases
          name: "Rilis build ${{ github.run_number }}"
          # Path ke file APK yang akan diunggah
          files: build/app/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
